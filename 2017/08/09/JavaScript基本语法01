<!DOCTYPE html>
<html lang="zh-Hans">
<head>

    <!--[if lt IE 9]>
        <style>body {display: none; background: none !important} </style>
        <meta http-equiv="Refresh" Content="0; url=//outdatedbrowser.com/" />
    <![endif]-->

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge, chrome=1" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta name="format-detection" content="telephone=no" />
<meta name="author" content="RuningTitan" />



<meta name="description" content="JavaScript 是一门高端的、动态的、弱类型的编程语言，适合面向对象和函数式的编程风格。   JavaScript 语法源自 Java，一等函数（first-class function）来自于Scheme，基于原型（prototype-based）的继承来自于Self。">
<meta name="keywords" content="JavaScript,语法">
<meta property="og:type" content="article">
<meta property="og:title" content="JavaScript基本语法01">
<meta property="og:url" content="https://titanjun.top/2017/08/09/JavaScript基本语法01">
<meta property="og:site_name" content="RuningTitan&#39;s Blog">
<meta property="og:description" content="JavaScript 是一门高端的、动态的、弱类型的编程语言，适合面向对象和函数式的编程风格。   JavaScript 语法源自 Java，一等函数（first-class function）来自于Scheme，基于原型（prototype-based）的继承来自于Self。">
<meta property="og:locale" content="zh-Hans">
<meta property="og:updated_time" content="2018-03-07T03:03:29.000Z">
<meta name="twitter:card" content="summary">
<meta name="twitter:title" content="JavaScript基本语法01">
<meta name="twitter:description" content="JavaScript 是一门高端的、动态的、弱类型的编程语言，适合面向对象和函数式的编程风格。   JavaScript 语法源自 Java，一等函数（first-class function）来自于Scheme，基于原型（prototype-based）的继承来自于Self。">

<link rel="apple-touch-icon" href= "/apple-touch-icon.png">


    <link rel="alternate" href="/atom.xml" title="RuningTitan&#39;s Blog" type="application/atom+xml">



    <link rel="shortcut icon" href="/favicon.png">



    <link href="//cdn.bootcss.com/animate.css/3.5.1/animate.min.css" rel="stylesheet">



    <link href="//cdn.bootcss.com/fancybox/2.1.5/jquery.fancybox.min.css" rel="stylesheet">



    <script src="//cdn.bootcss.com/pace/1.0.2/pace.min.js"></script>
    <link href="//cdn.bootcss.com/pace/1.0.2/themes/blue/pace-theme-minimal.css" rel="stylesheet">


<link rel="stylesheet" href="/css/style.css">



<link href="//cdn.bootcss.com/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet">


<title>JavaScript基本语法01 | RuningTitan&#39;s Blog</title>

<script src="//cdn.bootcss.com/jquery/2.2.4/jquery.min.js"></script>
<script src="//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"></script>

<script>
    var yiliaConfig = {
        fancybox: true,
        animate: true,
        isHome: false,
        isPost: true,
        isArchive: false,
        isTag: false,
        isCategory: false,
        fancybox_js: "//cdn.bootcss.com/fancybox/2.1.5/jquery.fancybox.min.js",
        scrollreveal: "//cdn.bootcss.com/scrollReveal.js/3.1.4/scrollreveal.min.js",
        search: true
    }
</script>


    <script> yiliaConfig.jquery_ui = [false]; </script>



    <script> yiliaConfig.rootUrl = "\/";</script>



    <script src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5a9e4cdf8ccd2ba8"></script>




</head>
<body>
  <div id="container">
    <div class="left-col">
    <div class="overlay"></div>
<div class="intrude-less">
    <header id="header" class="inner">
        <a href="/" class="profilepic">
            <img src="/img/titanjun.png" class="animated zoomIn">
        </a>
        <hgroup>
          <h1 class="header-author"><a href="/">RuningTitan</a></h1>
        </hgroup>

        

        
            <form id="search-form">
            <input type="text" id="local-search-input" name="q" placeholder="search..." class="search form-control" autocomplete="off" autocorrect="off" searchonload="true" />
            <i class="fa fa-times" onclick="resetSearch()"></i>
            </form>
            <div id="local-search-result"></div>
            <p class='no-result'>No results found <i class='fa fa-spinner fa-pulse'></i></p>
        


        
            <div id="switch-btn" class="switch-btn">
                <div class="icon">
                    <div class="icon-ctn">
                        <div class="icon-wrap icon-house" data-idx="0">
                            <div class="birdhouse"></div>
                            <div class="birdhouse_holes"></div>
                        </div>
                        <div class="icon-wrap icon-ribbon hide" data-idx="1">
                            <div class="ribbon"></div>
                        </div>
                        
                        <div class="icon-wrap icon-link hide" data-idx="2">
                            <div class="loopback_l"></div>
                            <div class="loopback_r"></div>
                        </div>
                        
                        
                        <div class="icon-wrap icon-me hide" data-idx="3">
                            <div class="user"></div>
                            <div class="shoulder"></div>
                        </div>
                        
                    </div>
                    
                </div>
                <div class="tips-box hide">
                    <div class="tips-arrow"></div>
                    <ul class="tips-inner">
                        <li>菜单</li>
                        <li>标签</li>
                        
                        <li>友情链接</li>
                        
                        
                        <li>关于我</li>
                        
                    </ul>
                </div>
            </div>
        

        <div id="switch-area" class="switch-area">
            <div class="switch-wrap">
                <section class="switch-part switch-part1">
                    <nav class="header-menu">
                        <ul>
                        
                            <li><a href="/">主页</a></li>
                        
                            <li><a href="/archives/">文章列表</a></li>
                        
                            <li><a href="/tags/">标签云</a></li>
                        
                            <li><a href="/about/">关于我</a></li>
                        
                        </ul>
                    </nav>
                    <nav class="header-nav">
                        <ul class="social">
                            
                                <a class="fa 简书" href="https://www.jianshu.com/u/5bd5e9ed569e" title="简书"></a>
                            
                                <a class="fa CSDN" href="http://blog.csdn.net/ShmilyCoder" title="CSDN"></a>
                            
                                <a class="fa GitHub" href="https://github.com/CoderTitan" title="GitHub"></a>
                            
                                <a class="fa 新浪微博" href="https://weibo.com/p/1005056052774133/home?from=page_100505&mod=TAB&is_all=1#place" title="新浪微博"></a>
                            
                                <a class="fa Email" href="mailto:quanjunt@163.com" title="Email"></a>
                            
                                <a class="fa QQ" href="/741700649" title="QQ"></a>
                            
                                <a class="fa 微信" href="/dan741700649" title="微信"></a>
                            
                        </ul>
                    </nav>
                </section>
                
                
                <section class="switch-part switch-part2">
                    <div class="widget tagcloud" id="js-tagcloud">
                        <ul class="tag-list"><li class="tag-list-item"><a class="tag-list-link" href="/tags/3DTouch/">3DTouch</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/AVFoundation/">AVFoundation</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Array/">Array</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/AsyncStorage/">AsyncStorage</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/CATransition/">CATransition</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/CIDetector/">CIDetector</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/CIFilter/">CIFilter</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/CSS/">CSS</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Category/">Category</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/CoreAnimation/">CoreAnimation</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/CoreImage/">CoreImage</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Dictionary/">Dictionary</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Error/">Error</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Express/">Express</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Facebook-POP/">Facebook POP</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Flex/">Flex</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/HTML5/">HTML5</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/HTML5标签/">HTML5标签</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/JavaScript/">JavaScript</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/ListView/">ListView</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Mac-工具/">Mac 工具</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Navigator/">Navigator</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/NavigatorIOS/">NavigatorIOS</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Node-js/">Node.js</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Objective-C/">Objective-C</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/RxSwift/">RxSwift</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Scanner/">Scanner</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/ScrollView/">ScrollView</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Speech/">Speech</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/String/">String</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Swift/">Swift</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Swift3-0/">Swift3.0</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Swift4-0/">Swift4.0</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/TabBariOS/">TabBariOS</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/TabNavigator/">TabNavigator</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/UIBesizationv/">UIBesizationv</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/UICollectionView/">UICollectionView</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/UIMenuController/">UIMenuController</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/UIStackView/">UIStackView</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/UITableView/">UITableView</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Vision/">Vision</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/WebStorm/">WebStorm</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/WebView/">WebView</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Web服务器/">Web服务器</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/iOS扫描器/">iOS扫描器</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/入坑/">入坑</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/响应式编程/">响应式编程</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/富文本/">富文本</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/框架/">框架</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/桥接/">桥接</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/语法/">语法</a></li></ul>
                    </div>
                </section>
                
                
                
                <section class="switch-part switch-part3">
                    <div id="js-friends">
                    
                      <a class="main-nav-link switch-friends-link" href="https://hexo.io">Hexo</a>
                    
                      <a class="main-nav-link switch-friends-link" href="https://pages.github.com/">GitHub</a>
                    
                      <a class="main-nav-link switch-friends-link" href="http://moxfive.xyz/">MOxFIVE</a>
                    
                    </div>
                </section>
                

                
                
                <section class="switch-part switch-part4">
                
                    <div id="js-aboutme">iOS开发工程师</div>
                </section>
                
            </div>
        </div>
    </header>                
</div>
    </div>
    <div class="mid-col">
      <nav id="mobile-nav">
      <div class="overlay">
          <div class="slider-trigger"></div>
          <h1 class="header-author js-mobile-header hide"><a href="/" title="回到主页">RuningTitan</a></h1>
      </div>
    <div class="intrude-less">
        <header id="header" class="inner">
            <a href="/" class="profilepic">
                <img src="/img/titanjun.png" class="animated zoomIn">
            </a>
            <hgroup>
              <h1 class="header-author"><a href="/" title="回到主页">RuningTitan</a></h1>
            </hgroup>
            
            <nav class="header-menu">
                <ul>
                
                    <li><a href="/">主页</a></li>
                
                    <li><a href="/archives/">文章列表</a></li>
                
                    <li><a href="/tags/">标签云</a></li>
                
                    <li><a href="/about/">关于我</a></li>
                
                <div class="clearfix"></div>
                </ul>
            </nav>
            <nav class="header-nav">
                        <ul class="social">
                            
                                <a class="fa 简书" target="_blank" href="https://www.jianshu.com/u/5bd5e9ed569e" title="简书"></a>
                            
                                <a class="fa CSDN" target="_blank" href="http://blog.csdn.net/ShmilyCoder" title="CSDN"></a>
                            
                                <a class="fa GitHub" target="_blank" href="https://github.com/CoderTitan" title="GitHub"></a>
                            
                                <a class="fa 新浪微博" target="_blank" href="https://weibo.com/p/1005056052774133/home?from=page_100505&mod=TAB&is_all=1#place" title="新浪微博"></a>
                            
                                <a class="fa Email" target="_blank" href="mailto:quanjunt@163.com" title="Email"></a>
                            
                                <a class="fa QQ" target="_blank" href="/741700649" title="QQ"></a>
                            
                                <a class="fa 微信" target="_blank" href="/dan741700649" title="微信"></a>
                            
                        </ul>
            </nav>
        </header>                
    </div>
    <link class="menu-list" tags="标签" friends="友情链接" about="关于我"/>
</nav>
      <div class="body-wrap"><article id="post-JavaScript基本语法01" class="article article-type-post" itemscope itemprop="blogPost">
  
    <div class="article-meta">
      <a href="/2017/08/09/JavaScript基本语法01" class="article-date">
      <time datetime="2017-08-09T15:16:40.000Z" itemprop="datePublished">2017-08-09</time>
</a>


    </div>
  
  <div class="article-inner">
    
      <input type="hidden" class="isFancy" />
    
    
      <header class="article-header">
        
  
    <h1 class="article-title" itemprop="name">
      JavaScript基本语法01
    </h1>
  

      </header>
      
      <div class="article-info article-info-post">
        
    <div class="article-category tagcloud">
    <a class="article-category-link" href="/categories/学习笔记/">学习笔记</a>
    </div>


        
    <div class="article-tag tagcloud">
        <ul class="article-tag-list"><li class="article-tag-list-item"><a class="article-tag-list-link" href="/tags/JavaScript/">JavaScript</a></li><li class="article-tag-list-item"><a class="article-tag-list-link" href="/tags/语法/">语法</a></li></ul>
    </div>

        <div class="clearfix"></div>
      </div>
      
    
    <div class="article-entry" itemprop="articleBody">
      
          
        <blockquote>
<p>JavaScript 是一门高端的、动态的、弱类型的编程语言，适合面向对象和函数式的编程风格。</p>
</blockquote>
<blockquote>
<p>JavaScript 语法源自 Java，一等函数（first-class function）来自于Scheme，基于原型（prototype-based）的继承来自于Self。</p>
</blockquote>
<a id="more"></a>
<h1 id="一、类型、值和变量"><a href="#一、类型、值和变量" class="headerlink" title="一、类型、值和变量"></a>一、类型、值和变量</h1><h2 id="1、数字"><a href="#1、数字" class="headerlink" title="1、数字"></a>1、数字</h2><ul>
<li>JavaScript 中不区分整数值和浮点数值，所有数字均用浮点数值表示</li>
<li>JS采用IEEE754标准定义的64位浮点格式表示数字，这意味着它能表示的最大值是±1.7976031348623157×10308，最小值是±5×10-324</li>
<li>按照JS中的数字格式，能够表示的整数范围是-9007199254740992~9007199254740992（即 -253~253）</li>
<li>需要注意的是，JS中实际的操作（比如数组索引，位操作符）则是基于32位整数。</li>
</ul>
<h3 id="1-1、数字展示格式"><a href="#1-1、数字展示格式" class="headerlink" title="1.1、数字展示格式"></a>1.1、数字展示格式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">2</span><br><span class="line">100000</span><br><span class="line">3.1415</span><br><span class="line">.333333</span><br><span class="line">9.02e10    //9.02 * 10的10次方</span><br><span class="line">1.4E-8     //1.4 * 10的-8次方</span><br></pre></td></tr></table></figure>
<h3 id="1-2、JavaScript中的算术运算符"><a href="#1-2、JavaScript中的算术运算符" class="headerlink" title="1.2、JavaScript中的算术运算符"></a>1.2、JavaScript中的算术运算符</h3><ul>
<li>JavaScript用Math对象实现复杂的运算<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Math.pow(2,3)   //8；2的3次幂</span><br><span class="line">Math.round(.6)  //1.0；四舍五入</span><br><span class="line">Math.ceil(.6)   //1.0；向上取整</span><br><span class="line">Math.floor(.6)  //0.0；向下取整</span><br><span class="line">Math.abs(-5)    //5；求绝对值</span><br><span class="line">Math.max(x,y,z) //返回最大值</span><br><span class="line">Math.min(x,y,z) //返回最小值</span><br><span class="line">Math.random()   //生成一个大于等于0小于1.0的伪随机数</span><br><span class="line">Math.PI         //π；圆周率</span><br><span class="line">Math.E          //e；自然对数的底数</span><br><span class="line">Math.sqrt(3)    //3的平方根</span><br><span class="line">Math.pow(3,1/3) //3的立方根</span><br><span class="line">Math.sin(0)     //三角函数。Math.cos(),Math.tan(),Math.sin(30/180*Math.PI) </span><br><span class="line">Math.log(10)    //10的自然对数</span><br><span class="line">Math.log(100)/Math.LN10 //以10为底100的对数</span><br><span class="line">Math.log(512)/Math.LN2 //以2为底512的对数</span><br><span class="line">Math.exp(3)     //e的3次幂</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="1-3、日期和时间"><a href="#1-3、日期和时间" class="headerlink" title="1.3、日期和时间"></a>1.3、日期和时间</h3><ul>
<li>Date()构造函数，用于创建表示日期和时间的对象</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var then=new Date(2017,0,1);          //2017年1月1日</span><br><span class="line">var later=new Date(2017,0,1,17,10,30);//2017年1月1日 17:10:30</span><br><span class="line">var now=new Date();   //当前日期和时间</span><br><span class="line">var elapsed=now-then; //日期减法，计算时间间隔的毫秒数</span><br><span class="line">later.getFullYear();  //获取年份</span><br><span class="line">later.getMonth();     //获取月份，从0开始计数，一月份是0</span><br><span class="line">later.getDate();      //获取日期，从1开始计数，一号是1</span><br><span class="line">later.getDay();       //星期几，0是星期日，5是星期五</span><br><span class="line">later.getHours();     //获取小时</span><br><span class="line">later.getMinutes();   //获取分钟</span><br><span class="line">later.getSeconds();   //获取秒</span><br><span class="line">later.getUTCHours();  //获取使用UTC表示的小时的时间</span><br></pre></td></tr></table></figure>
<h1 id="二、文本字符串"><a href="#二、文本字符串" class="headerlink" title="二、文本字符串"></a>二、文本字符串</h1><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符串</span></span><br><span class="line">var jsString = <span class="string">"Hello,JavaScript"</span>;</span><br><span class="line"><span class="comment">//字符串长度</span></span><br><span class="line">var s0 = jsString.length;  <span class="comment">//16,</span></span><br><span class="line"><span class="comment">// 第一个字符</span></span><br><span class="line">var s1 = jsString.charAt(<span class="number">0</span>) ; <span class="comment">//"H",</span></span><br><span class="line"><span class="comment">// 最后一个字符</span></span><br><span class="line">var s2 = jsString.charAt(s0 - <span class="number">1</span>)  <span class="comment">//"t",</span></span><br><span class="line"><span class="comment">//第2~4个字符</span></span><br><span class="line">var s3 = jsString.substring(<span class="number">1</span>, <span class="number">4</span>) <span class="comment">//"ell",</span></span><br><span class="line"><span class="comment">//第2~4个字符</span></span><br><span class="line">var s4 = jsString.slice(<span class="number">1</span>, <span class="number">4</span>)  <span class="comment">//"ell"</span></span><br><span class="line"><span class="comment">// 最后三个字符</span></span><br><span class="line">var s5 = jsString.slice(<span class="number">-3</span>)  <span class="comment">//"ipt"</span></span><br><span class="line"><span class="comment">// 字符"a"首次出现的位置</span></span><br><span class="line">var s6 = jsString.indexOf(<span class="string">"a"</span>)  <span class="comment">//7</span></span><br><span class="line"><span class="comment">// 字符"a"最后一次出现的位置</span></span><br><span class="line">var s7 = jsString.lastIndexOf(<span class="string">"a"</span>)  <span class="comment">//9</span></span><br><span class="line"><span class="comment">// 字符"a"第二次出现的位置</span></span><br><span class="line">var s8 = jsString.indexOf(<span class="string">"a"</span>, <span class="number">2</span>)  <span class="comment">//7</span></span><br><span class="line"><span class="comment">// 字符串分割成数组</span></span><br><span class="line">var s9 = jsString.split(<span class="string">","</span>)    <span class="comment">//["Hello", "JavaScript"]</span></span><br><span class="line"><span class="comment">// 全文字符替换</span></span><br><span class="line">var s10 = jsString.replace(<span class="string">"e"</span>, <span class="string">"E"</span>)  <span class="comment">//"HEllo,JavaScript"</span></span><br><span class="line"><span class="comment">// 全文转换为大写</span></span><br><span class="line">var s11 = jsString.toUpperCase()  <span class="comment">//"HELLO,JAVASCRIPT"</span></span><br><span class="line"><span class="comment">// 全文转换成小写</span></span><br><span class="line">var s12 = jsString.toLowerCase()  <span class="comment">//"hello,javascript"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//测试输出结果</span></span><br><span class="line">var sArr = [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12]</span><br><span class="line"><span class="keyword">for</span> (var i = <span class="number">0</span>; i &lt; sArr.length; i++) &#123;</span><br><span class="line">    console.log(sArr[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="三、JavaScript之数组"><a href="#三、JavaScript之数组" class="headerlink" title="三、JavaScript之数组"></a>三、JavaScript之数组</h1><ul>
<li>数组是值的有序集合</li>
<li>JavaScript数组事务类型的:数组元素可以使任何类型, 同一数组中的不同元素也可以是不同类型</li>
<li>数组的元素也可以是对象或者其他数组</li>
<li>JavaScript数组可能是稀疏的: 数组元素的索引不一定是连续的,之间可能有空缺</li>
<li>稀疏数组的length比任何元素的索引都要大</li>
</ul>
<h2 id="1-创建数组-直接量创建"><a href="#1-创建数组-直接量创建" class="headerlink" title="1.创建数组(直接量创建)"></a>1.创建数组(直接量创建)</h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//1.1: 简单数组</span></span><br><span class="line">var empty = [];   <span class="comment">//空数组</span></span><br><span class="line">var pram = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>]  <span class="comment">//有三个数值的数组</span></span><br><span class="line">var misc = [<span class="number">1.1</span>, <span class="literal">true</span>, <span class="string">"a"</span>] <span class="comment">//三个不同元素的数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.2: 数组中的直接量不一定是常量,也可能是表达式</span></span><br><span class="line">var base = <span class="number">1024</span></span><br><span class="line">var baseArr = [base, base + <span class="number">1</span>, base + <span class="number">2</span>, base + <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.3: 包含对象或数组</span></span><br><span class="line">var array3 = [[<span class="number">1</span>, &#123;x: <span class="number">1</span>, y: <span class="number">2</span>&#125;], [<span class="number">2</span>, &#123;x: <span class="number">3</span>, y: <span class="number">4</span>&#125;]]</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.4: 忽略中间量中的某个值,省略的元素将被赋予undefined</span></span><br><span class="line">var undef1 = [<span class="number">1</span>, ,<span class="number">3</span>] <span class="comment">//三个元素,中间的为undefined</span></span><br><span class="line">var undef2 = [, ,] <span class="comment">//2个元素都是undefined</span></span><br><span class="line"><span class="comment">//注: 数组直接量的语法允许游客选的结尾的逗号,故[, ,]只有2个元素</span></span><br></pre></td></tr></table></figure>
<h2 id="2-Array-创建数组"><a href="#2-Array-创建数组" class="headerlink" title="2. Array()创建数组"></a>2. Array()创建数组</h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 空数组</span></span><br><span class="line">var a = new Array()</span><br><span class="line"><span class="comment">//指定数组长度</span></span><br><span class="line">var a1 = new  Array(<span class="number">10</span>)</span><br><span class="line"><span class="comment">//显示创建</span></span><br><span class="line">var a2 = new  Array(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">"a"</span>)</span><br></pre></td></tr></table></figure>
<h2 id="3-数组操作"><a href="#3-数组操作" class="headerlink" title="3. 数组操作"></a>3. 数组操作</h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//3. 读写数组元素</span></span><br><span class="line"><span class="comment">//注: 1.数组是对象的特殊形式,故JavaScript的数组不存在越界报错的情况,只会取到undefined</span></span><br><span class="line">var value = a2[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//4. 数组的长度</span></span><br><span class="line"><span class="comment">//length属性为可读可写</span></span><br><span class="line">var arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">var arrLength = arr.length  <span class="comment">//6</span></span><br><span class="line">arr.length = <span class="number">4</span>   <span class="comment">//数组变为[1, 2, 3, 4]</span></span><br><span class="line">arr.length = <span class="number">0</span>  <span class="comment">// 删除所有元素,为[]</span></span><br><span class="line">arr.length = <span class="number">5</span>  <span class="comment">// 长度为5,但是没有元素,相当于new Array(5)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//5. 数组元素的添加和删除</span></span><br><span class="line"><span class="comment">//5.1: 索引值添加</span></span><br><span class="line">var a0 = []</span><br><span class="line">a0[<span class="number">0</span>] = <span class="number">3</span></span><br><span class="line">a0[<span class="number">1</span>] = <span class="string">"one"</span></span><br><span class="line"><span class="comment">//a0为[3, "one"]</span></span><br></pre></td></tr></table></figure>
<h2 id="6-数组的方法"><a href="#6-数组的方法" class="headerlink" title="6. 数组的方法"></a>6. 数组的方法</h2><ul>
<li>主要介绍ECMAScript中的方法</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//6.1: join()</span></span><br><span class="line"><span class="comment">/*注:</span></span><br><span class="line"><span class="comment">0.不改变原数组</span></span><br><span class="line"><span class="comment">1.将数组所有的元素都转化成字符串,并连接在一起,返回生成后的字符串(如不指定分隔符默认使用逗号)</span></span><br><span class="line"><span class="comment">2.join是String.split()的逆向操作</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var arr0 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">var join1 = arr0.join() <span class="comment">// "1,2,3,4"</span></span><br><span class="line">var join2 = arr0.join(<span class="string">""</span>) <span class="comment">//"1234"</span></span><br><span class="line">var join3 = arr0.join(<span class="string">"-"</span>)  <span class="comment">//"1-2-3-4"</span></span><br><span class="line">console.log(join1,join2,join3)</span><br><span class="line"></span><br><span class="line"><span class="comment">//6.2: reverse()</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">0.改变原数组</span></span><br><span class="line"><span class="comment">1.将数组中的元素颠倒顺序*/</span></span><br><span class="line">arr0.reverse()  <span class="comment">//现在arr0为[4, 3, 2, 1]</span></span><br><span class="line">console.log(arr0)</span><br><span class="line"></span><br><span class="line"><span class="comment">//6.3: sort()排序</span></span><br><span class="line"><span class="comment">/*注:</span></span><br><span class="line"><span class="comment">0.改变原数组</span></span><br><span class="line"><span class="comment">1.不带参数时,以字母表顺序排序</span></span><br><span class="line"><span class="comment">2.如果数组包含undefined,则会被排到数组的末尾</span></span><br><span class="line"><span class="comment">3.字母排序区分大小写,A &lt; a</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var arr1 = new Array(<span class="string">"tian"</span>, <span class="string">"quan"</span>, <span class="string">"jun"</span>)</span><br><span class="line">arr1.sort() <span class="comment">//arr1 = ["jun", "quan", "tian"]</span></span><br><span class="line">console.log(arr1)</span><br><span class="line"></span><br><span class="line"><span class="comment">//条件比较</span></span><br><span class="line">var  arr2 = new Array(<span class="string">"ant"</span>, <span class="string">"Bug"</span>, <span class="string">"cat"</span>, <span class="string">"Dog"</span>)</span><br><span class="line">arr2.sort()  <span class="comment">//["Bug", "Dog", "ant", "cat"]</span></span><br><span class="line">console.log(arr2)</span><br><span class="line"></span><br><span class="line"><span class="comment">//不区分大小写排序</span></span><br><span class="line">arr2.sort(function (s, t) &#123;</span><br><span class="line">    var a = s.toLowerCase()</span><br><span class="line">    var b = t.toLowerCase()</span><br><span class="line">    <span class="keyword">if</span> (a &lt; b) <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">    <span class="keyword">if</span> (a &gt; b) <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;)</span><br><span class="line">console.log(arr2)</span><br><span class="line"><span class="comment">//["ant", "Bug", "cat", "Dog"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//6.4: concat()创建并返回一个新数组</span></span><br><span class="line"><span class="comment">//0.不改变原数组</span></span><br><span class="line">var arr4 = [<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">var concat1 = arr4.concat() <span class="comment">//[0, 2, 3]</span></span><br><span class="line">var concat2 = arr4.concat(<span class="number">1</span>, <span class="number">4</span>)  <span class="comment">//[0, 2, 3, 1, 4]</span></span><br><span class="line">var concat3 = arr4.concat([<span class="number">1</span>, <span class="number">4</span>]) <span class="comment">//[0, 2, 3, 1, 4]</span></span><br><span class="line">var concat4 = arr4.concat([<span class="number">1</span>, <span class="number">4</span>], [<span class="number">5</span>, <span class="number">6</span>]) <span class="comment">//[0, 2, 3, 1, 4, 5, 6]</span></span><br><span class="line">var concat5 = arr4.concat(<span class="number">1</span>, [<span class="number">4</span>, [<span class="number">5</span>, <span class="number">6</span>]]) <span class="comment">//[0, 2, 3, 1, 4, [5, 6]]</span></span><br><span class="line">var concatArr = [concat1, concat2, concat3, concat4, concat5]</span><br><span class="line">console.log(concatArr)</span><br><span class="line"></span><br><span class="line"><span class="comment">//6.5: slice()</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 注意:</span></span><br><span class="line"><span class="comment">* 1.返回数组的部分数组</span></span><br><span class="line"><span class="comment">* 2.不改变原数组</span></span><br><span class="line"><span class="comment">* 3.两个参数,分别表示始末位置,含左不含右</span></span><br><span class="line"><span class="comment">* 4. 1表示第一个元素,-1表示倒数第一个元素</span></span><br><span class="line"><span class="comment">* 5.只有一个参数,默认以此参数开始,到最后一个元素结束</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">var arr3 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">var slice1 = arr3.slice(<span class="number">0</span>,<span class="number">2</span>) <span class="comment">//[1, 2]</span></span><br><span class="line">var slice2 = arr3.slice(<span class="number">3</span>) <span class="comment">//[4, 5]</span></span><br><span class="line">var slice3 = arr3.slice(<span class="number">1</span>,<span class="number">-2</span>) <span class="comment">//[2, 3]</span></span><br><span class="line">var slice4 = arr3.slice(<span class="number">-3</span>,<span class="number">-2</span>)  <span class="comment">//[3]</span></span><br><span class="line">var sliceArr = [slice1, slice2, slice3, slice4]</span><br><span class="line">console.log(sliceArr)</span><br><span class="line"></span><br><span class="line"><span class="comment">//6.6: splice()</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 1.在数组中插入或删除元素的通用方法</span></span><br><span class="line"><span class="comment">* 2.会修改原数组,会改变数组的索引值</span></span><br><span class="line"><span class="comment">* 3.两个参数,参数一:起始位置;参数二:处理元素的个数(可省略)</span></span><br><span class="line"><span class="comment">* 4.若省略第二个参数,默认从起始位置到最后</span></span><br><span class="line"><span class="comment">* 5.如果没有元素就返回空数组</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">var m = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]</span><br><span class="line">var splice1 = m.splice(<span class="number">4</span>)  <span class="comment">//返回[5, 6, 7], m 是[1, 2, 3, 4]</span></span><br><span class="line">console.log(m)</span><br><span class="line">var splice2 = m.splice(<span class="number">1</span>, <span class="number">2</span>) <span class="comment">//返回[2, 3], m 是[1, 4]</span></span><br><span class="line">console.log(m)</span><br><span class="line">var splice3 = m.splice(<span class="number">1</span>, <span class="number">1</span>) <span class="comment">//返回[4], m 是[1]</span></span><br><span class="line">console.log(m)</span><br><span class="line">var spliceArr = [splice1, splice2, splice3]</span><br><span class="line">console.log(spliceArr)</span><br><span class="line"></span><br><span class="line"><span class="comment">//6.7: push()和pop()</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 方法将数组当成栈使用</span></span><br><span class="line"><span class="comment">* 1.push方法在尾部添加一个或者多个元素,返回新的数组长度</span></span><br><span class="line"><span class="comment">* 2.pop删除数组的最后一个元素,减小数组的长度,返回删除的值</span></span><br><span class="line"><span class="comment">* 3.改变原数组的值和长度</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">var m0 = []</span><br><span class="line">var pp1 = m0.push(<span class="number">1</span>, <span class="number">2</span>)  <span class="comment">//[1, 2], 返回2</span></span><br><span class="line">var pp2 = m0.pop()       <span class="comment">//[1], 返回2</span></span><br><span class="line">var pp3 = m0.push(<span class="number">3</span>, <span class="number">4</span>)  <span class="comment">//[1, 3, 4], 返回3</span></span><br><span class="line">var pp4 = m0.pop()       <span class="comment">//[1, 3],  返回4</span></span><br><span class="line">var pp5 = m0.push([<span class="number">9</span>,<span class="number">0</span>]) <span class="comment">//[1, 3, [9, 0]], 返回3</span></span><br><span class="line">var pp6 = m0.pop()       <span class="comment">//[1, 3], 返回[9, 0]</span></span><br><span class="line">var pp7 = m0.pop()       <span class="comment">//[1], 返回3</span></span><br><span class="line">var ppArr = [pp1, pp2, pp3, pp4, pp5, pp6, pp7]</span><br><span class="line">console.log(ppArr)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//6.8: unshift()和shift()</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 1.unshift在头部添加一个或者多个元素,返回长度</span></span><br><span class="line"><span class="comment">* 2.shift删除数组的第一个元素,返回删除的元素</span></span><br><span class="line"><span class="comment">* 3.改变原数组,改变原数组的索引</span></span><br><span class="line"><span class="comment">* 4.unshift插入多个元素时,试一次性插入的</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">var sh = []</span><br><span class="line">var sh1 = sh.unshift(<span class="number">1</span>)  <span class="comment">//sh: [1], 返回: 1</span></span><br><span class="line">var sh2 = sh.unshift(<span class="number">22</span>) <span class="comment">//sh: [1, 22], 返回: 2</span></span><br><span class="line">var sh3 = sh.shift()     <span class="comment">//sh: [22], 返回: 22</span></span><br><span class="line">var sh4 = sh.unshift(<span class="number">3</span>, [<span class="number">4</span>, <span class="number">5</span>]) <span class="comment">//sh: [3, [4, 5], 1], 返回:  3</span></span><br><span class="line">var sh5 = sh.shift()      <span class="comment">//sh: [[4, 5], 1], 返回: 3</span></span><br><span class="line">var sh6 = sh.shift()      <span class="comment">//sh: [1], 返回: [4, 5]</span></span><br><span class="line">var shiftArr = [sh1, sh2, sh3, sh4, sh5, sh6]</span><br><span class="line">console.log(shiftArr)</span><br><span class="line"><span class="comment">//注: unshift插入多个元素时,试一次性插入的,例如:</span></span><br><span class="line">sh.unshift(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"><span class="comment">// 结果: [3, 4]</span></span><br><span class="line">sh.unshift(<span class="number">3</span>)</span><br><span class="line">sh.unshift(<span class="number">4</span>)</span><br><span class="line"><span class="comment">//结果: [4, 3]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//6.9: toString()和toLocalString()</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 1.toString()将数组元素转化成字符串后,用都好链接输出</span></span><br><span class="line"><span class="comment">* 2.toString()和join()不加参数的返回的值是一样的</span></span><br><span class="line"><span class="comment">* 3.toLocalString()是toString()的本地化版本</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">var str0 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].toString() <span class="comment">//返回: "1,2,3"</span></span><br><span class="line">var str1 = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>].toString()  <span class="comment">//返回: "a,b,c"</span></span><br><span class="line">var str2 = [<span class="number">1</span>, [<span class="number">2</span>, <span class="string">"c"</span>]].toString()  <span class="comment">//返回: "1,2,c"</span></span><br><span class="line">var str3 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].toLocaleString()  <span class="comment">//返回: "1,2,3"</span></span><br><span class="line">var strArr = [str0, str1, str2, str3, str4]</span><br><span class="line">console.log(strArr)</span><br></pre></td></tr></table></figure>
<h3 id="7-ECMAScript5中数组的方法"><a href="#7-ECMAScript5中数组的方法" class="headerlink" title="7. ECMAScript5中数组的方法"></a>7. ECMAScript5中数组的方法</h3><ul>
<li>1.ECMAScript5定义了九个新的数组方法</li>
<li>2.大多数ECMAScript5数组方法的第一个参数是一个函数</li>
<li>2.第二个参数是可选的,如果有,则调用的函数被看作是第二个参数的方法</li>
<li>3.也就是说在调用函数时,传递进去的第二个参数作为它的this关键字的值来使用</li>
<li>4.ECMAScript5中的数组方法不会修改他们调用的原始数组</li>
<li>5.传递给这些方法的函数是可以改变这些数组的</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//7.1: forEach()</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 1.方法从头到尾遍历数组,为每个元素调用指定的函数</span></span><br><span class="line"><span class="comment">* 2.forEach使用三个参数调用该函数:数组元素,元素索引, 数组本身</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">var data1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="comment">//求和</span></span><br><span class="line">var sum = <span class="number">0</span></span><br><span class="line">data1.forEach(function (value) &#123;</span><br><span class="line">    sum += value</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//15</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//每个元素本身自加1</span></span><br><span class="line">data1.forEach(function (value, i, arr) &#123;</span><br><span class="line">    arr[i] = value + <span class="number">1</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//[2, 3, 4, 5, 6]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//7.2: map()</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 1.返回一个新数组,不改变原数组</span></span><br><span class="line"><span class="comment">* 2.原数组若是稀疏数组,返回也是稀疏数组</span></span><br><span class="line"><span class="comment">* 3.具有相同的长度,相同的缺失元素</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">var arr2 = data1.map(function (x) &#123;</span><br><span class="line">    <span class="keyword">return</span> x * x</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// [4, 9, 16, 25, 36]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//7.3: filter()逻辑判定,过滤数组</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 1.返回原数组的一个子集</span></span><br><span class="line"><span class="comment">* 2.返回原数组符合条件的元素,组成新数组</span></span><br><span class="line"><span class="comment">* 3.会将稀疏数组压缩,返回的是稠密数组</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">var arr3 = data1.filter(function (x) &#123;</span><br><span class="line">    <span class="keyword">return</span> x &gt; <span class="number">3</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//[4, 5, 6]</span></span><br><span class="line"></span><br><span class="line">var data2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">var arr4 = data2.filter(function (i) &#123;</span><br><span class="line">    <span class="keyword">return</span> i % <span class="number">2</span> == <span class="number">0</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//[2, 4]</span></span><br><span class="line"></span><br><span class="line">var data3 = [<span class="number">1</span>, <span class="number">2</span>, , , null, <span class="number">5</span>]</span><br><span class="line">var arr5 = data3.filter(function (x) &#123;</span><br><span class="line">    <span class="keyword">return</span> x !== undefined &amp;&amp; x != null</span><br><span class="line">&#125;)</span><br><span class="line">console.log(arr5)</span><br><span class="line"><span class="comment">//[1, 2, 5]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//7.4: every()和some()数组的逻辑判定</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 1.对数组元素应用指定的函数进行判定</span></span><br><span class="line"><span class="comment">* 2.返回trur或者false</span></span><br><span class="line"><span class="comment">* 2.every()都为true返回true,否则返回false</span></span><br><span class="line"><span class="comment">* 3.some()都为false,返回false;有一个为true,返回true</span></span><br><span class="line"><span class="comment">* 4.一旦该方法确定了返回值,就会停止遍历数组</span></span><br><span class="line"><span class="comment">* 5.空数组,every()返回true,some()返回false</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">var data4 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">var sum1 = data4.every(function (x) &#123;</span><br><span class="line">    <span class="keyword">return</span> x &lt; <span class="number">10</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//sum1 = true</span></span><br><span class="line">var sum2 = data4.every(function (x) &#123;</span><br><span class="line">    <span class="keyword">return</span> x % <span class="number">2</span> === <span class="number">0</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//sum2 = false</span></span><br><span class="line"></span><br><span class="line">var sum3 = data4.some(function (x) &#123;</span><br><span class="line">    <span class="keyword">return</span> x % <span class="number">2</span> === <span class="number">0</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//sum3 = true</span></span><br><span class="line">var sum4 = data4.some(isNaN)</span><br><span class="line"><span class="comment">//sum4 = false, data4不包含非整数值元素</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//7.5: reduce()和reduceRigh()</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 作用: 将数组元素进行组合生成单个值</span></span><br><span class="line"><span class="comment">* 1.reduce()需要两个参数;参数一:执行操作的函数;参数二:传递给函数的初始值</span></span><br><span class="line"><span class="comment">* 2.reduceRight()是倒叙操作,功能与reduce相同</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">var data5 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">var sn0 = data5.reduce(function (x, y) &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"><span class="comment">//15</span></span><br><span class="line"></span><br><span class="line">var sn1 = data5.reduce(function (x, y) &#123;</span><br><span class="line">    <span class="keyword">return</span> x * y</span><br><span class="line">&#125;, <span class="number">1</span>)</span><br><span class="line"><span class="comment">//120</span></span><br><span class="line"></span><br><span class="line">var sn2 = data5.reduce(function (x, y) &#123;</span><br><span class="line">    <span class="keyword">return</span> x &gt; y ? x : y</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//7.6: indexOf()和lastIndexOf()</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 1.搜索整个数组中具有给定值的元素,返回找到的第一个元素的索引,如果没有找到就返回-1</span></span><br><span class="line"><span class="comment">* 2.indexOf(),从前向后搜索,lastIndexOf()从后向前搜索</span></span><br><span class="line"><span class="comment">* 3.参数一:元素值; 参数二: 搜索的起始位置(可省略,默认从头开始)</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">var data6 = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line">var index1 = data6.indexOf(<span class="number">1</span>) <span class="comment">//1, data6[1] = 1</span></span><br><span class="line">var index2 = data6.indexOf(<span class="number">3</span>) <span class="comment">//-1, 没有值为3的元素</span></span><br><span class="line">var index3 = data6.lastIndexOf(<span class="number">1</span>) <span class="comment">//3, data6[3] = 1</span></span><br><span class="line">var index4 = data6.indexOf(<span class="number">2</span>, <span class="number">1</span>)<span class="comment">//2, data6[2] = 2</span></span><br><span class="line">var index5 = data6.lastIndexOf(<span class="number">2</span>, <span class="number">-1</span>)<span class="comment">//2, data6[2] = 2</span></span><br></pre></td></tr></table></figure>
<h2 id="8-判定一个位置对象是否为数组"><a href="#8-判定一个位置对象是否为数组" class="headerlink" title="8. 判定一个位置对象是否为数组"></a>8. 判定一个位置对象是否为数组</h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var data = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line"><span class="comment">// var isA = data.isArray()</span></span><br><span class="line">console.log(data.isArray())</span><br></pre></td></tr></table></figure>
      
    </div>
    
  </div>
  
    
    <div class="copyright">
        <p><span>本文标题:</span><a href="/2017/08/09/JavaScript基本语法01">JavaScript基本语法01</a></p>
        <p><span>文章作者:</span><a href="/" title="回到主页">RuningTitan</a></p>
        <p><span>发布时间:</span>2017-08-09, 23:16:40</p>
        <p><span>最后更新:</span>2018-03-07, 11:03:29</p>
        <p>
            <span>原始链接:</span><a class="post-url" href="/2017/08/09/JavaScript基本语法01" title="JavaScript基本语法01">https://titanjun.top/2017/08/09/JavaScript基本语法01</a>
            <span class="copy-path" data-clipboard-text="原文: https://titanjun.top/2017/08/09/JavaScript基本语法01　　作者: RuningTitan" title="点击复制文章链接"><i class="fa fa-clipboard"></i></span>
            <script> var clipboard = new Clipboard('.copy-path'); </script>
        </p>
        <p>
            <span>许可协议:</span><i class="fa fa-creative-commons"></i> <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" title="CC BY-NC-SA 4.0 International" target = "_blank">"署名-非商用-相同方式共享 4.0"</a> 转载请保留原文链接及作者。
        </p>
    </div>



    <nav id="article-nav">
        
            <div id="article-nav-newer" class="article-nav-title">
                <a href="/2017/08/25/升级Swift4.0遇到的坑">
                    升级Swift4.0遇到的坑
                </a>
            </div>
        
        
            <div id="article-nav-older" class="article-nav-title">
                <a href="/2017/07/19/Swift4.0新特性之String、Array和Dictionary">
                    Swift4.0新特性之String、Array和Dictionary
                </a>
            </div>
        
    </nav>

  
</article>

    <div id="toc" class="toc-article">
        <strong class="toc-title">文章目录</strong>
        
            <ol class="toc"><li class="toc-item toc-level-1"><a class="toc-link" href="#一、类型、值和变量"><span class="toc-number">1.</span> <span class="toc-text">一、类型、值和变量</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#1、数字"><span class="toc-number">1.1.</span> <span class="toc-text">1、数字</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#1-1、数字展示格式"><span class="toc-number">1.1.1.</span> <span class="toc-text">1.1、数字展示格式</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#1-2、JavaScript中的算术运算符"><span class="toc-number">1.1.2.</span> <span class="toc-text">1.2、JavaScript中的算术运算符</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#1-3、日期和时间"><span class="toc-number">1.1.3.</span> <span class="toc-text">1.3、日期和时间</span></a></li></ol></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#二、文本字符串"><span class="toc-number">2.</span> <span class="toc-text">二、文本字符串</span></a></li><li class="toc-item toc-level-1"><a class="toc-link" href="#三、JavaScript之数组"><span class="toc-number">3.</span> <span class="toc-text">三、JavaScript之数组</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#1-创建数组-直接量创建"><span class="toc-number">3.1.</span> <span class="toc-text">1.创建数组(直接量创建)</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#2-Array-创建数组"><span class="toc-number">3.2.</span> <span class="toc-text">2. Array()创建数组</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#3-数组操作"><span class="toc-number">3.3.</span> <span class="toc-text">3. 数组操作</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#6-数组的方法"><span class="toc-number">3.4.</span> <span class="toc-text">6. 数组的方法</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#7-ECMAScript5中数组的方法"><span class="toc-number">3.4.1.</span> <span class="toc-text">7. ECMAScript5中数组的方法</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#8-判定一个位置对象是否为数组"><span class="toc-number">3.5.</span> <span class="toc-text">8. 判定一个位置对象是否为数组</span></a></li></ol></li></ol>
        
    </div>
    <style>
        .left-col .switch-btn,
        .left-col .switch-area {
            display: none;
        }
        .toc-level-6 i,
        .toc-level-6 ol {
            display: none !important;
        }
    </style>

    <input type="button" id="tocButton" value="隐藏目录"  title="点击按钮隐藏或者显示文章目录">

    <script>
        yiliaConfig.toc = ["隐藏目录", "显示目录", !!"false"];
    </script>



    
<div class="share">
    

    
        <div class="addthis_sharing_toolbox"></div>
    
</div>







    



  
  <!-- Gitment评论插件通用代码 -->
<div id="git"></div>
<link rel="stylesheet" href="https://imsun.github.io/gitment/style/default.css">
<script src="https://imsun.github.io/gitment/dist/gitment.browser.js"></script>
<script>
var gitment = new Gitment({
  owner: "CoderTitan",//github用户名
  repo: "CoderTitan.github.io",//用户存储评论的github项目名称
  oauth: {
    client_id: "42cc1c92340bb98775b3",//注册OAuth Application时生产的ClinetID
    client_secret:"4d5bc35eb71c99eb21ad0f13d592943b498bce89",//注册OAuth Application时生成的Client Secret
  },
})
gitment.render('git')
</script>
<!-- Gitment代码结束 -->

  




    <div class="scroll" id="post-nav-button">
        
            <a href="/2017/08/25/升级Swift4.0遇到的坑" title="上一篇: 升级Swift4.0遇到的坑">
                <i class="fa fa-angle-left"></i>
            </a>
        

        <a title="文章列表"><i class="fa fa-bars"></i><i class="fa fa-times"></i></a>

        
            <a href="/2017/07/19/Swift4.0新特性之String、Array和Dictionary" title="下一篇: Swift4.0新特性之String、Array和Dictionary">
                <i class="fa fa-angle-right"></i>
            </a>
        
    </div>

    <ul class="post-list"><li class="post-list-item"><a class="post-list-link" href="/2018/01/24/ReactNative之AsyncStorage本地存储">ReactNative之AsyncStorage本地存储</a></li><li class="post-list-item"><a class="post-list-link" href="/2018/01/20/Node.js搭建Web服务器">Node.js搭建Web服务器</a></li><li class="post-list-item"><a class="post-list-link" href="/2018/01/06/ReactNative之TabBariOS和TabNavigator">ReactNative之TabBariOS和TabNavigator</a></li><li class="post-list-item"><a class="post-list-link" href="/2018/01/05/React Native之导航组件NavigatorIOS和Navigator">React Native之导航组件NavigatorIOS和Navigator</a></li><li class="post-list-item"><a class="post-list-link" href="/2018/01/03/ReactNaive之ScrollView和ListView">ReactNaive之ScrollView和ListView</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/12/10/Swift语音和文本的转换">Swift语音和文本的转换</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/11/29/Swift之Vision 图像识别框架">Swift之Vision 图像识别框架</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/11/22/iOS黑科技之(AVFoundation)动态人脸识别(二)">iOS黑科技之(AVFoundation)动态人脸识别(二)</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/11/22/iOS黑科技之(CoreImage)静态人脸识别(一)">iOS黑科技之(CoreImage)静态人脸识别(一)</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/11/16/Swift之二维码的生成、识别和扫描">Swift之二维码的生成、识别和扫描</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/11/11/Swift之删除HTML5页面的广告">Swift之删除HTML5页面的广告</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/10/28/Swift之微信朋友圈图片浏览器">Swift之微信朋友圈图片浏览器</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/10/23/Swift开发之3DTouch实用演练">Swift开发之3DTouch实用演练</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/10/23/ReactNaive之CSS和Flex布局">ReactNaive之CSS和Flex布局</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/10/17/Swift之Facebook的POP动画使用和实战">Swift之Facebook的POP动画使用和实战</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/10/12/iOS出门必备之CoreAnimation(核心动画)">iOS出门必备之CoreAnimation(核心动画)</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/10/08/RxSwift+Moya网络请求之项目实战">RxSwift+Moya网络请求之项目实战</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/09/21/RxSwift的使用详解02">RxSwift的使用详解02</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/09/15/RxSwift的使用详解01">RxSwift的使用详解01</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/09/09/iOS之Scanner字符串扫描类">iOS之Scanner字符串扫描类</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/08/25/升级Swift4.0遇到的坑">升级Swift4.0遇到的坑</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/08/09/JavaScript基本语法01">JavaScript基本语法01</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/07/19/Swift4.0新特性之String、Array和Dictionary">Swift4.0新特性之String、Array和Dictionary</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/07/10/Swift版-H5页面实现长按保存图片">Swift版-H5页面实现长按保存图片</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/06/16/HTML5学习笔记之音视频标签">HTML5学习笔记之音视频标签</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/06/15/HTML5学习笔记之表单标签">HTML5学习笔记之表单标签</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/06/15/HTML5学习笔记之表格标签">HTML5学习笔记之表格标签</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/06/15/HTML5学习笔记之基础标签">HTML5学习笔记之基础标签</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/06/15/HTML5基本介绍">HTML5基本介绍</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/06/15/Swift项目创建桥接文件">Swift项目创建桥接文件</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/06/12/Swift仿网易新闻首页左右滑动切换页面">Swift仿网易新闻首页左右滑动切换页面</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/06/10/iOS9之UIStackView的使用">iOS9之UIStackView的使用</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/05/19/NSMutableAttributedString富文本">NSMutableAttributedString富文本</a></li><li class="post-list-item"><a class="post-list-link" href="/2017/05/19/Swift函数式编程之Map&Reduce&Filter">Swift函数式编程之Map&Reduce&Filter</a></li><li class="post-list-item"><a class="post-list-link" href="/2016/12/30/Swift3.0基本语法03">Swift3.0基本语法03</a></li><li class="post-list-item"><a class="post-list-link" href="/2016/12/28/Swift3.0基本语法02">Swift基本语法02</a></li><li class="post-list-item"><a class="post-list-link" href="/2016/12/25/Swift3.0之基本语法01">Swift3.0之基本语法01</a></li><li class="post-list-item"><a class="post-list-link" href="/2016/11/25/iOS之NSDate的Category">iOS之NSDate的Category</a></li><li class="post-list-item"><a class="post-list-link" href="/2016/11/22/iOS之UIMenuController的简单使用">iOS之UIMenuController的简单使用</a></li><li class="post-list-item"><a class="post-list-link" href="/2016/11/20/iOS之UITableView设置全屏分隔线">iOS之UITableView设置全屏分隔线</a></li><li class="post-list-item"><a class="post-list-link" href="/2016/11/15/iOS之UICollectionView自定义布局">iOS之UICollectionView自定义布局</a></li><li class="post-list-item"><a class="post-list-link" href="/2016/10/10/Mac破解版软件大全">Mac破解版软件大全</a></li></ul>




    <script>
        
    </script>
</div>
      <footer id="footer">
    <div class="outer">
        <div id="footer-info">
            <div class="footer-left">
                <i class="fa fa-copyright"></i> 
                2016-2018 RuningTitan
            </div>
            <div class="footer-right">
                <a href="http://hexo.io/" target="_blank" title="快速、简洁且高效的博客框架">Hexo</a>  Theme <a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" title="简而不减 Hexo 双栏博客主题  v3.5">Yelee</a> by MOxFIVE <i class="fa fa-heart animated infinite pulse"></i>
            </div>
        </div>
        
            <div class="visit">
                
                    <span id="busuanzi_container_site_pv" style='display:none'>
                        <span id="site-visit" title="本站到访数"><i class="fa fa-user" aria-hidden="true"></i><span id="busuanzi_value_site_uv"></span>
                        </span>
                    </span>
                
                
                    <span>| </span>
                
                
                    <span id="busuanzi_container_page_pv" style='display:none'>
                        <span id="page-visit"  title="本页阅读量"><i class="fa fa-eye animated infinite pulse" aria-hidden="true"></i><span id="busuanzi_value_page_pv"></span>
                        </span>
                    </span>
                
            </div>
        
    </div>
</footer>
    </div>
    
<script data-main="/js/main.js" src="//cdn.bootcss.com/require.js/2.2.0/require.min.js"></script>





    <script type="text/x-mathjax-config">
MathJax.Hub.Config({
    tex2jax: {
        inlineMath: [ ['$','$'], ["\\(","\\)"]  ],
        processEscapes: true,
        skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']
    }
});

MathJax.Hub.Queue(function() {
    var all = MathJax.Hub.getAllJax(), i;
    for(i=0; i < all.length; i += 1) {
        all[i].SourceElement().parentNode.className += ' has-jax';                 
    }       
});
</script>

<script src="//cdn.bootcss.com/mathjax/2.6.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>


<div class="scroll" id="scroll">
    <a href="#" title="返回顶部"><i class="fa fa-arrow-up"></i></a>
    <a href="#comments" onclick="load$hide();" title="查看评论"><i class="fa fa-comments-o"></i></a>
    <a href="#footer" title="转到底部"><i class="fa fa-arrow-down"></i></a>
</div>
<script>
    // Open in New Window
    
        var oOpenInNew = {
            
            
            
            
            
            
             archives: ".archive-article-title", 
             miniArchives: "a.post-list-link", 
            
             friends: "#js-friends a", 
             socail: ".social a" 
        }
        for (var x in oOpenInNew) {
            $(oOpenInNew[x]).attr("target", "_blank");
        }
    
</script>

<script async src="https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js">
</script>
  </div>
</body>
</html>